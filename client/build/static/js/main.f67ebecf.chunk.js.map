{"version":3,"sources":["components/ThoughtList/index.js","utils/mutations.js","utils/queries.js","utils/auth.js","components/ThoughtForm/index.js","pages/Home.js","pages/Signup.js","pages/Login.js","components/CommentList/index.js","components/CommentForm/index.js","pages/SingleThought.js","pages/Profile.js","components/Header/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["ThoughtList","thoughts","title","showTitle","showUsername","length","map","thought","className","to","thoughtAuthor","style","fontSize","createdAt","thoughtText","_id","LOGIN_USER","gql","ADD_USER","ADD_THOUGHT","ADD_COMMENT","QUERY_USER","QUERY_THOUGHTS","QUERY_SINGLE_THOUGHT","QUERY_ME","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","ThoughtForm","useState","setThoughtText","characterCount","setCharacterCount","useMutation","update","cache","addThought","data","readQuery","query","writeQuery","e","console","error","me","handleFormSubmit","event","preventDefault","variables","Auth","getProfile","username","loggedIn","onSubmit","name","placeholder","value","lineHeight","resize","onChange","target","type","message","Home","useQuery","loading","border","Signup","email","password","formState","setFormState","addUser","handleChange","log","login","cursor","Login","props","CommentList","comments","borderBottom","comment","commentAuthor","commentText","CommentForm","thoughtId","setCommentText","addComment","SingleThought","useParams","fontStyle","Profile","userParam","user","Header","onClick","logout","Footer","useLocation","navigate","useNavigate","pathname","role","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f67ebecf.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ThoughtList = ({\n  thoughts,\n  title,\n  showTitle = true,\n  showUsername = true,\n}) => {\n  if (!thoughts.length) {\n    return <h3>No Thoughts Yet</h3>;\n  }\n\n  return (\n    <div>\n      {showTitle && <h3>{title}</h3>}\n      {thoughts &&\n        thoughts.map((thought) => (\n          <div key={thought._id} className=\"card mb-3\">\n            <h4 className=\"card-header bg-primary text-light p-2 m-0\">\n              {showUsername ? (\n                <Link\n                  className=\"text-light\"\n                  to={`/profiles/${thought.thoughtAuthor}`}\n                >\n                  {thought.thoughtAuthor} <br />\n                  <span style={{ fontSize: '1rem' }}>\n                    had this thought on {thought.createdAt}\n                  </span>\n                </Link>\n              ) : (\n                <>\n                  <span style={{ fontSize: '1rem' }}>\n                    You had this thought on {thought.createdAt}\n                  </span>\n                </>\n              )}\n            </h4>\n            <div className=\"card-body bg-light p-2\">\n              <p>{thought.thoughtText}</p>\n            </div>\n            <Link\n              className=\"btn btn-primary btn-block btn-squared\"\n              to={`/thoughts/${thought._id}`}\n            >\n              Join the discussion on this thought.\n            </Link>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default ThoughtList;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_THOUGHT = gql`\n  mutation addThought($thoughtText: String!) {\n    addThought(thoughtText: $thoughtText) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n      }\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($thoughtId: ID!, $commentText: String!) {\n    addComment(thoughtId: $thoughtId, commentText: $commentText) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        createdAt\n      }\n    }\n  }\n`;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      thoughts {\n        _id\n        thoughtText\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_THOUGHTS = gql`\n  query getThoughts {\n    thoughts {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_THOUGHT = gql`\n  query getSingleThought($thoughtId: ID!) {\n    thought(thoughtId: $thoughtId) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        commentAuthor\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      thoughts {\n        _id\n        thoughtText\n        thoughtAuthor\n        createdAt\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ThoughtList from '../components/ThoughtList';\nimport ThoughtForm from '../components/ThoughtForm';\n\nimport { QUERY_THOUGHTS } from '../utils/queries';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\n  const thoughts = data?.thoughts || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          <ThoughtForm />\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <ThoughtList\n              thoughts={thoughts}\n              title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nconst CommentList = ({ comments = [] }) => {\n  if (!comments.length) {\n    return <h3>No Comments Yet</h3>;\n  }\n\n  return (\n    <>\n      <h3\n        className=\"p-5 display-inline-block\"\n        style={{ borderBottom: '1px dotted #1a1a1a' }}\n      >\n        Comments\n      </h3>\n      <div className=\"flex-row my-4\">\n        {comments &&\n          comments.map((comment) => (\n            <div key={comment._id} className=\"col-12 mb-3 pb-3\">\n              <div className=\"p-3 bg-dark text-light\">\n                <h5 className=\"card-header\">\n                  {comment.commentAuthor} commented{' '}\n                  <span style={{ fontSize: '0.825rem' }}>\n                    on {comment.createdAt}\n                  </span>\n                </h5>\n                <p className=\"card-body\">{comment.commentText}</p>\n              </div>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default CommentList;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","import React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport CommentList from '../components/CommentList';\nimport CommentForm from '../components/CommentForm';\n\nimport { QUERY_SINGLE_THOUGHT } from '../utils/queries';\n\nconst SingleThought = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const { thoughtId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_THOUGHT, {\n    // pass URL parameter\n    variables: { thoughtId: thoughtId },\n  });\n\n  const thought = data?.thought || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"my-3\">\n      <h3 className=\"card-header bg-dark text-light p-2 m-0\">\n        {thought.thoughtAuthor} <br />\n        <span style={{ fontSize: '1rem' }}>\n          had this thought on {thought.createdAt}\n        </span>\n      </h3>\n      <div className=\"bg-light py-4\">\n        <blockquote\n          className=\"p-4\"\n          style={{\n            fontSize: '1.5rem',\n            fontStyle: 'italic',\n            border: '2px dotted #1a1a1a',\n            lineHeight: '1.5',\n          }}\n        >\n          {thought.thoughtText}\n        </blockquote>\n      </div>\n\n      <div className=\"my-5\">\n        <CommentList comments={thought.comments} />\n      </div>\n      <div className=\"m-3 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n        <CommentForm thoughtId={thought._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleThought;\n","import React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport ThoughtForm from '../components/ThoughtForm';\nimport ThoughtList from '../components/ThoughtList';\n\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  // navigate to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Navigate to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row justify-center mb-3\">\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\n          Viewing {userParam ? `${user.username}'s` : 'your'} profile.\n        </h2>\n\n        <div className=\"col-12 col-md-10 mb-5\">\n          <ThoughtList\n            thoughts={user.thoughts}\n            title={`${user.username}'s thoughts...`}\n            showTitle={false}\n            showUsername={false}\n          />\n        </div>\n        {!userParam && (\n          <div\n            className=\"col-12 col-md-10 mb-3 p-3\"\n            style={{ border: '1px dotted #1a1a1a' }}\n          >\n            <ThoughtForm />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <div>\n          <Link className=\"text-light\" to=\"/\">\n            <h1 className=\"m-0\">Tech Thoughts</h1>\n          </Link>\n          <p className=\"m-0\">Get into the mind of a programmer.</p>\n        </div>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/me\">\n                {Auth.getProfile().data.username}'s profile\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button\n            className=\"btn btn-dark mb-3\"\n            onClick={() => navigate(-1)}\n          >\n            &larr; Go Back\n          </button>\n        )}\n        <h4>\n          Made with{' '}\n          <span\n            className=\"emoji\"\n            role=\"img\"\n            aria-label=\"heart\"\n            aria-hidden=\"false\"\n          >\n            ❤️\n          </span>{' '}\n          by the Tech Thoughts team.\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleThought from './pages/SingleThought';\nimport Profile from './pages/Profile';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route \n                path=\"/\"\n                element={<Home />}\n              />\n              <Route \n                path=\"/login\" \n                element={<Login />}\n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />}\n              />\n              <Route \n                path=\"/me\" \n                element={<Profile />}\n              />\n              <Route \n                path=\"/profiles/:username\" \n                element={<Profile />}\n              />\n              <Route \n                path=\"/thoughts/:thoughtId\" \n                element={<SingleThought />}\n              />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}