{"version":3,"sources":["utils/queries.js","components/GameList.js","pages/Home.js","utils/mutations.js","utils/auth.js","pages/Signup.js","pages/Login.js","pages/SingleParlay.js","components/ParlayList.js","components/ParlayForm.js","pages/Dashboard.js","components/Navbar.js","components/Footer.js","pages/Parlays.js","App.js","reportWebVitals.js","index.js"],"names":["QUERY_USER","gql","_templateObject","_taggedTemplateLiteral","QUERY_PARLAYS","_templateObject2","QUERY_GAMES","_templateObject3","QUERY_SINGLE_PARLAY","_templateObject4","QUERY_ME","_templateObject5","GameList","_useQuery","useQuery","loading","data","games","length","console","log","_jsx","children","className","id","map","game","_jsxs","src","alt","awayTeam","awayOdd","homeTeam","homeOdd","_id","date","Date","toString","split","splice","join","document","write","Home","LOGIN_USER","ADD_USER","AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Signup","_useState","useState","username","email","password","_useState2","_slicedToArray","formState","setFormState","_useMutation","useMutation","_useMutation2","addUser","_useMutation2$","error","handleChange","event","_event$target","target","name","_objectSpread","_defineProperty","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$addUser","_data","wrap","_context","prev","next","preventDefault","variables","sent","Auth","login","t0","stop","_x","apply","arguments","Link","to","onSubmit","placeholder","type","onChange","rel","href","message","Login","props","_yield$login","style","cursor","SingleParlay","parlayId","useParams","parlayid","parlay","createdAt","ParlayList","parlays","_ref$showUsername","title","Wins","Losses","showUsername","user","me","loggedIn","getProfile","Navigate","concat","fontSize","win_choice","_Fragment","ParlayForm","setPick","_useState3","_useState4","setHome","_useState5","_useState6","setAway","_useState7","_useState8","setHOdd","_useState9","_useState10","setAOdd","_useParams","possibleWin","Math","floor","random","ticketId","handleSetPick","alert","for","Dashboard","Navbar","useEffect","Aos","init","duration","addEventListener","onClick","logout","Footer","year","getFullYear","useLocation","navigate","useNavigate","pathname","Parlays","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a30a2e0a.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      parlays {\n        _id\n        name\n        win_choice\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_PARLAYS = gql`\n  query getParlays {\n    parlays {\n      _id\n      name\n      win_choice\n      createdAt\n      games {\n        _id\n        homeTeam\n        awayTeam\n      }\n    }\n  }\n`;\n\nexport const QUERY_GAMES = gql`\n  query getGames {\n    games {\n      _id\n      homeTeam\n      awayTeam\n      homeOdd\n      awayOdd\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_PARLAY = gql`\n  query getSingleParlay($parlayId: ID!) {\n    parlay(parlayId: $parlayId) {\n      _id\n      name\n      win_choice\n      createdAt\n      games {\n        _id\n        homeTeam\n        awayTeam\n        homeOdd\n        awayOdd\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      parlays {\n        _id\n        name\n        win_choice\n        createdAt\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_GAMES } from '../utils/queries';\n\n\nconst GameList = () => {\n  const { loading, data } = useQuery(QUERY_GAMES);\n  const games = data?.games || [];\n  if (!games.length) {\n    return <h3>Where is the action❗❓</h3>;\n  }\nconsole.log(games);\n\n  return (\n      <div>\n      {loading ? ( \n        <div>Loading...💸...</div> \n      ) : (\n//************************* GAME-INFO: TEAMS & ODDS ******************//\n         <div className=\"flex-row my-4\" id=\"gaming\">\n          {games && games.map((game) => (\n            <div key={game._id} className=\"card mb-3\" id=\"game-card\">\n               <div className=\"p-3 text-light\" id=\"game-card\">\n                <div id=\"game-cardss\">\n                <p><img id=\"team\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667007982/away_m9lnn0.png\" alt=\"Away\"></img></p>\n                  <p className=\"card-body\">{game.awayTeam}</p>\n                  <p className=\"card-body\">Odds: ({game.awayOdd})</p>\n                </div>\n                  <p id=\"vs\"><img src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667008346/vs1_mwfonr.png\" alt=\"VS\"></img></p>\n                <div id=\"game-cards\">\n                <p><img id=\"team\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667007982/home_qpmug9.png\" alt=\"Home\"></img></p>\n                  <p className=\"card-body\">Home: {game.homeTeam}</p>\n                  <p className=\"card-body\">Odds: ({game.homeOdd})</p>  \n                </div>\n              </div>\n              </div>\n          ))}\n          </div>\n      )}\n      </div>\n  );\n          };\nexport default GameList;","import React from 'react';\n\nimport GameList from '../components/GameList';\n\nvar date = (new Date()).toString().split(' ').splice(1,3).join(' ');\ndocument.write(date);\n\nconst Home = () => {\n\n  return (\n    <main> \n      <div className=\"flex-row justify-center\">\n      <h5 id=\"list-title\">\n        Scheduled 🏈 Games: {date} 📋\n      </h5>\n          <GameList />\n        </div>\n    </main>\n  );\n};\n\nexport default Home;","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_PARLAY = gql`\n  mutation addParlay($parlayId: ID!) {\n    addParlay(parlayId: $parlayId) {\n      _id\n      win_choice\n      createdAt\n       game {\n        _id\n        homeTeam\n        awayTeam\n        homeOdd\n        awayOdd\n      }\n    }\n  }\n`;\n\nexport const ADD_GAME = gql`\n  mutation addGame ($parlayId: ID!, $homeTeam: String!, $awayTeam: String!, $homeOdd: Int!, $awayOdd: Int!) {\n    addGame(parlayId: $parlayId, homeTeam: $homeTeam, awayTeam: $awayTeam, homeOdd: $homeOdd, awayOdd: $awayOdd) {\n      games {\n        _id\n        homeTeam\n        awayTeam\n        homeOdd\n        awayOdd\n      }\n    }\n  }\n`;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center\">\n      <div className=\"col\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Sign Up 🎰</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <button className='btn' id=\"btn1\">\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </button>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                 <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" />\n                 <script src=\"https://upload-widget.cloudinary.com/global/all.js\" type=\"text/javascript\"></script>\n  \n                {/* <input className='form-input'\n                    name=\"image\"\n                    type=\"url\"\n                    value={formState.image}\n                    onChange={handleChange}/>\n                <div id=\"inline_container\"></div> */}\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button id=\"btn1\"\n                  className=\"btn\"\n                  type=\"submit\"\n                >\n                  Submit 📬\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\" id=\"log\">\n          <h4 id=\"login\" className=\"card-header\">Login 📡</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit 📬\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div id=\"alert\" className=\"my-3 p-3 text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport GameList from '../components/GameList';\n\n\nimport { QUERY_SINGLE_PARLAY } from '../utils/queries';\n\nconst SingleParlay = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const { parlayId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_PARLAY, {\n    // pass URL parameter\n    variables: { parlayid: parlayId },\n  });\n\n  const parlay = data?.parlay || {};\n\n  if (loading) {\n    return <div>💸...💸</div>;\n  }\n  return (\n    <div className=\"my-3\" id=\"single-parlay\">\n      <h3 className=\"card-header bg-dark text-light\" id=\"single-header\">\n        {parlay.username} <br />\n          had this pick on {parlay.createdAt}\n      </h3>\n      <div className=\"bg-light py-4\">\n        <blockquote\n          className=\"p-4\" id=\"blockquote\"\n        >\n          {parlay.name}\n        </blockquote>\n      </div>\n\n      <div className=\"my-5\">\n        <GameList games={parlay.games} />\n      </div>\n      {/* <div className=\"m-3 p-4\" style={{ border: '2px solid #1a1a1a' }}>\n        <GameForm parlayId={parlay._id} />\n      </div> */}\n    </div>\n  );\n};\n\nexport default SingleParlay;","import React from 'react';\nimport { Navigate, useParams, Link } from 'react-router-dom';\nimport {  useQuery } from '@apollo/client';\nimport { QUERY_PARLAYS, QUERY_ME, QUERY_USER } from '../utils/queries';\nimport Auth from '../utils/auth';\n// import ParlayForm from './ParlayForm';\n\nconst ParlayList = ({\n  parlays,\n  title,\n  Wins,\n  Losses,\n  showUsername = true,\n}) => {\n  const { username } = useParams();\nconst { loading, data } = useQuery(username ? QUERY_USER : QUERY_ME, QUERY_PARLAYS, {\n      variables: { username: username },\n    });\n  \n    const user = data?.me || data?.user || {};\n\n    if (Auth.loggedIn() && Auth.getProfile().data.username === username) {\n      return <Navigate to=\"/parlays\"/>;\n    }\n  \n    if (loading) {\n      return <div>Loading...💸...</div>;\n    }\n  \n    if (!user?.username) {\n      return (\n        <h4 id=\"title-list\">\n            Login in to play❗⛔ Click on the links above to\n          Sign Up 🎰  or Log In 📡 ❗⛔\n        </h4>\n      );\n    }\n  \n  // if (!parlays.length) {\n  //   return <h3>Where are the picks❗❓</h3>;\n  // }\n\n  return (\n  \n    <div className='row' id=\"parlay-row\">\n       <h5 id=\"user-title\">\n        {`${user.username}'s Picks`}\n        <p id=\"totals\">TOTALS</p>\n        <p id=\"wins\">Winnings: {Wins=\"+$3,200.00\"}</p>\n        <p id=\"losses\">Losses: {Losses=\"-$1,650.00\"}</p>\n          <p>{title=\"Winner...Winner 💰...Chicken...Dinner 🐔\"}</p> \n      </h5>\n      <main className=\"flex-row justify-center\" id=\"action\">\n      {parlays &&\n        parlays.map((parlay) => (\n          <div key={parlay._id} className=\"card mb-3\" id=\"user-parlays\">\n            <h4 className=\"card-header\" id=\"single-header\">\n              {showUsername ? (\n               <p>\n                <Link\n                  className=\"text-light\" to={`/profiles/${parlay.username}`}>\n                 <span style={{ fontSize: '2rem' }}>\n                 {parlay.name}\n                 <p  style={{ fontSize: '1.5rem' }}>Ticket Code: [{parlay.win_choice}]</p>\n                <br/> \n                 </span>\n                  <span style={{ fontSize: '1rem' }}>\n                    Picked On: {parlay.createdAt}\n                  </span>\n                </Link>\n               </p> \n              ) : (\n                <>\n                  <span style={{ fontSize: '1rem' }}>\n                    You had this pick {parlay.createdAt}\n                  </span>\n               \n                </>\n              )}\n            </h4>\n          </div>\n        ))}\n    </main>\n    </div>\n  );\n};\n\nexport default ParlayList;","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_PARLAYS, QUERY_ME, QUERY_USER } from '../utils/queries';\n\nfunction ParlayForm() {\n  \n  const [name, setPick] = useState('');\n  const [homeTeam, setHome] = useState(' ');\n  const [awayTeam, setAway] = useState(' ');\n  const [homeOdd, setHOdd] = useState(' ');\n  const [awayOdd, setAOdd] = useState(' ');\n  \n  const { username, user } = useParams();\n  const { loading, data } = useQuery(username ? QUERY_USER : QUERY_ME, QUERY_PARLAYS, {\n        variables: { username: username },\n      });\n  const parlay = data?.parlay || [];\n  const games = data?.games || [];\n \nconsole.log(parlay, games);\n\nconst possibleWin = Math.floor(Math.random() * (99 - 70 + 1) + 235.8);\nconst ticketId = Math.floor(Math.random() * (15005) + 1);\n\n  if (loading) {\n    return <div>Loading...💸...</div>;\n  }\n    const handleSetPick = event => {\n      setPick(event.target.value)\n    };\n    const handleSetHome = event => {\n      setHome(event.target.value)\n    };\n    const handleSetAway = event => {\n      setAway(event.target.value)\n    };\n    const handleSetHOdd = event => {\n      setHOdd(event.target.value)\n    };\n    const handleSetAOdd = event => {\n      setAOdd(event.target.value)\n    };\n  const handleSubmit = event => {\n    event.preventDefault();\n    alert(`Parlay picks, successfully submitted✅ Good Luck!💰\n            YOUR CURRENT PARLAY TICKET: ID ${ticketId} \\n \n            Parlay Code: ${name} \\n\n            1st Pick: ${homeTeam} \\n\n            2nd Pick: ${awayTeam} \\n\n            3rd Pick: ${homeOdd} \\n\n            4th Pick: ${awayOdd} \\n\n            Possible Winnings: ${possibleWin} \\n\n            `);\n  };\n  return (\n    <form onSubmit={handleSubmit} className=\"flex-row justify-center\" id=\"form\">\n      <div>\n        <label id=\"label\">Check The Parlay Randomizer (Optional):</label>\n        <input\n          type=\"checkbox\"\n          name=\"name\"\n          onChange={handleSetPick}\n          value={[0,1,0,1]}\n        />\n        <input\n          type=\"checkbox\"\n          name=\"name\"\n          onChange={handleSetPick}\n          value={[0,1]}\n        />\n        <input\n          type=\"checkbox\"\n          name=\"name\"\n          onChange={handleSetPick}\n          value={[0,1,0]}\n        />\n        <input\n          type=\"checkbox\"\n          name=\"name\"\n          onChange={handleSetPick}\n          value={[0,0,1]}\n        />\n        <input\n          type=\"checkbox\"\n          name=\"name\"\n          onChange={handleSetPick}\n          value={[1,1,0]}\n        />\n        <label id=\"label\" for={name}>{name}</label>\n      </div>\n      <div>\n        <label id=\"label\">Select 1 OR More Odds Choices:</label>\n        <input\n          type=\"checkbox\"\n          name=\"homeTeam\"\n          onChange={handleSetHome}\n          value={[homeTeam -150]}\n        />\n        <label id=\"label\" for={homeTeam}>{homeTeam}</label>\n        <label id=\"label\"></label>\n        <input\n          type=\"checkbox\"\n          name=\"awayTeam\"\n          onChange={handleSetAway}\n          value={[awayTeam +200]}\n        />\n         <label id=\"label\" for={awayTeam}>{awayTeam}</label>\n        <input\n          type=\"checkbox\"\n          name=\"homeOdd\"\n          onChange={handleSetHOdd}\n          value={[homeOdd -1.5]}\n        />\n        <label id=\"label\" for={homeOdd}>{homeOdd}</label>\n        <input\n          type=\"checkbox\"\n          name=\"awayOdd\"\n          onChange={handleSetAOdd}\n          value={[awayOdd +3.5]}\n        />\n        <label id=\"label\" for={awayOdd}>{awayOdd}</label>\n      </div>\n      <button className='btn' type=\"submit\">\n            Add Parlay 💸\n      </button>\n    </form>\n  )\n}\nexport default ParlayForm;","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport ParlayList from '../components/ParlayList';\nimport ParlayForm from '../components/ParlayForm';\nimport { QUERY_PARLAYS } from '../utils/queries';\n\nconst Dashboard = () => {\n  const { loading, data } = useQuery(QUERY_PARLAYS);\n  const parlays = data?.parlays || [];\n \n    if (loading) {\n      return <div>Loading...💸...</div>;\n    }\n    \n  return (\n  <main>\n      <div className=\"flex-row justify-center\">\n      <div id=\"parlay-form\"\n            className=\"col-12 col-md-10 mb-3 p-3\"\n          >\n            <ParlayForm />\n          </div>\n      <div className=\"flex-row justify-center\">\n        {loading ? (\n          <div>Loading...💸...</div>\n          ) : (\n        <ParlayList \n        parlays={parlays}\n        title=\"Winner...Winner 💰...Chicken...Dinner 🐔\"\n        />\n        \n        )}\n        </div>\n        </div>\n  </main>\n     \n\n  );\n};\n\nexport default Dashboard;\n","import React, {useEffect} from \"react\";\nimport { Link } from 'react-router-dom';\nimport Aos from \"aos\";\n\nimport Auth from '../utils/auth';\n\nconst Navbar = () => {\n  useEffect(() => {\n\t\tAos.init({duration:2000});\n\t\twindow.addEventListener(\"scroll\", () => {\n\t\t});\n\t}, [])\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n      <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <h1 id=\"main-title\"> 🏈⚽<img id=\"parlay\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667008558/cooltext422338805357325_qvpd09.png\" alt=\"Parlay Anytime\"></img>🏀⚾ </h1>\n        <Link className=\"text-light\" to=\"/\">\n            <h1 id=\"title\"><img id=\"build\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1666898132/cooltext422262976759629_qb9ewg.png\" alt=\"Build A Bet\"></img>🎲</h1>\n          </Link>\n          <div className=\"row\" id=\"links\">\n          {Auth.loggedIn() ? (\n            <>\n            <Link className=\"btn\" to=\"/me\">\n                {Auth.getProfile().data.username}'s Dashboard 🎛️\n            </Link>\n              <Link to=\"/parlays\">\n              <button className=\"btn\" to=\"/parlays\">\n              Parlays 🤑\n            </button>\n              </Link>\n            <button className=\"btn\" onClick={logout}>\n                Logout 📴\n            </button>\n              {/* <div id=\"user-image\" className=\"card-img-top\"><img src={image.user} alt=\"profile\"></img></div> */}\n            </>\n          ) : (\n            <>\n            <Link className=\"btn\" to=\"/\">\n                Games 🏟️\n            </Link>\n          \n            <Link className=\"btn\" to=\"/login\">\n                Login 📡\n            </Link>\n            \n            <Link className=\"btn\" to=\"/signup\">\n                Sign Up 🎰\n            </Link>\n            </>\n          )}\n          </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const year = new Date().getFullYear();\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer id=\"footer\" className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button id=\"back\" className=\"btn\"\n            onClick={() => navigate(-1)}\n          >\n            ⬅️ Go Back \n          </button>\n        )}\n        <h4 id=\"foot-title\">\n          Made with{' '}\n            🎲\n          {' '}\n          <strong> Da Parlay Makers &copy; {year} </strong>\n            <div className=\"col-12 col-sm-12 col-md-8 mx-auto\">\n            <a\n\t\t\t\t\t\t\t\tclassName=\"px-3\"\n\t\t\t\t\t\t\t\thref=\"https://github.com/AASports89/build-a-bet\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t<img id=\"github\" src='https://res.cloudinary.com/dhqsixgmo/image/upload/v1666484175/public/images/github-icon_mvuylu.png' alt=\"github icon\"/>\n\t\t\t\t\t\t\t</a>\n            </div>\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_PARLAYS } from '../utils/queries';\n\nvar date = (new Date()).toString().split(' ').splice(1,3).join(' ');\ndocument.write(date);\n\nconst Parlays = () => {\n\n  const { loading, data } = useQuery(QUERY_PARLAYS);\n  const parlays = data?.parlays || [];\n  if (!parlays.length) {\n    return <h3>Where is the action❗❓</h3>;\n  }\nconsole.log(parlays);\n\n// const { username } = useParams();\n// const { loading, data } = useQuery(username ? QUERY_USER : QUERY_ME, QUERY_PARLAYS, {\n//       variables: { username: username },\n//     });\n  \n    // const user = data?.me || data?.user || {};\n    \n    // if (Auth.loggedIn() && Auth.getProfile().data.username === username) {\n    //   return <Navigate to=\"/parlays\"/>;\n    // }\n  \n    // if (loading) {\n    //   return <div>Loading...💸...</div>;\n    // }\n  \n    // if (!user?.username) {\n    //   return (\n    //     <h4>\n    //         Login in to play❗⛔ Click on the links above to\n    //       Sign Up 🎰  or Log In 📡 ❗⛔\n    //     </h4>\n    //   );\n    // }\n  \n    // return (\n      return (\n        <div>\n        {loading ? ( \n          <div>Loading...💸...</div> \n        ) : (\n      //************************* PARLAY-INFO: NAME & WIN_CHOICE ******************//\n      \n      <div className=\"flex-row justify-center\" id=\"parlaying\">\n        <div className=\"flex-row justify-center\">\n          <h5 id=\"par-title\">\n          Parlays for: {date} 📋\n          </h5>\n          </div>\n        {parlays && parlays.map((parlay) => (\n        <div key={parlay._id} className=\"card mb-3\" id=\"game-cardss\">\n              <p className=\"card-body\">{parlay.name}</p>\n              <p className=\"card-body\"> Ticket Code: [{parlay.win_choice}]</p>\n              {parlay.games && parlay.games.map((game)=> (\n                <div key={game._id}>\n                  <p>{game.homeTeam} vs {game.awayTeam}</p>\n                </div>\n              ))}\n            </div>\n      ))}\n      </div>\n  )};\n    </div>\n  );\n          };\n      {/* <div>\n        <div className=\"flex-row justify-center\" id=\"action-div\">\n          <h2 className=\"col-12 col-md-10 mb-3 p-3\" id=\"parlay-title\">\n            Welcome! {Auth.getProfile().data.username}: Dashboard 🎛️\n          </h2>\n  \n              <div className=\"col-12 col-md-10 mb-5\">\n                <ParlayList\n              parlays={user.parlays}\n              title={`${user.username}'s picks...`}\n              showTitle={false}\n              showUsername={false}\n            />\n          </div>\n          {!username && (\n            <div\n              className=\"col-12 col-md-10 mb-3 p-3\"\n              style={{ border: '1px dotted #1a1a1a' }}\n            >\n              <ParlayForm />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }; */}\n  \n  export default Parlays;\n  ","import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleParlay from './pages/SingleParlay';\nimport Dashboard from './pages/Dashboard';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport GameList from './components/GameList';\nimport Parlays from './pages/Parlays';\nimport ParlayForm from './components/ParlayForm';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n      <header>\n      <Navbar />\n      </header>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <div className=\"container\">\n            <Routes>\n           \n              <Route \n                path=\"/\"\n                element={<Home />}\n              />\n               <Route \n                path=\"/\" \n                element={<GameList />}\n              />\n              <Route \n                path=\"/ParlayFrom\" \n                element={<ParlayForm />}\n              />\n              <Route \n                path=\"/parlays\" \n                element={<Parlays />}\n              />\n              <Route \n                path=\"/login\" \n                element={<Login />}\n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />}\n              />\n              <Route \n                path=\"/me\" \n                element={<Dashboard />}\n              />\n              <Route \n                path=\"/profiles/:username\" \n                element={<Dashboard />}\n              />\n              <Route \n                path=\"/parlays/:parlayId\" \n                element={<SingleParlay />}\n              />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}