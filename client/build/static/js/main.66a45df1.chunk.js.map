{"version":3,"sources":["utils/queries.js","components/TruckList.js","pages/Home.js","utils/mutations.js","utils/auth.js","pages/Signup.js","pages/Login.js","pages/SingleReservation.js","components/ReservationList.js","components/ReservationForm.js","pages/Dashboard.js","components/Navbar.js","components/Footer.js","pages/Reservations.js","App.js","reportWebVitals.js","index.js"],"names":["QUERY_USER","gql","_templateObject","_taggedTemplateLiteral","QUERY_RESERVATIONS","_templateObject2","QUERY_TRUCKS","_templateObject3","QUERY_SINGLE_RESERVATION","_templateObject4","QUERY_ME","_templateObject5","TruckList","_useQuery","useQuery","loading","data","trucks","length","console","log","_jsx","children","className","id","map","truck","_jsxs","src","alt","truckModel","rentalPrice","_id","date","Date","toString","split","splice","join","document","write","Home","class","LOGIN_USER","ADD_USER","AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Signup","_useState","useState","username","email","password","_useState2","_slicedToArray","formState","setFormState","_useMutation","useMutation","_useMutation2","addUser","_useMutation2$","error","handleChange","event","_event$target","target","name","_objectSpread","_defineProperty","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$addUser","_data","wrap","_context","prev","next","preventDefault","variables","sent","Auth","login","t0","stop","_x","apply","arguments","Link","to","onSubmit","placeholder","type","onChange","rel","href","message","Login","props","_yield$login","style","cursor","SingleReservation","reservationId","useParams","reservationid","reservation","createdAt","ReservationList","reservations","_ref$showUsername","title","Wins","Losses","showUsername","user","me","loggedIn","getProfile","Navigate","concat","fontSize","win_choice","_Fragment","ReservationForm","setReservation","_useState3","_useState4","setDate","_useState5","_useState6","setTruck","_useState7","_useState8","setPrice","_useParams","alert","for","FontAwesomeIcon","icon","Dashboard","Navbar","useEffect","Aos","init","duration","addEventListener","onClick","logout","Footer","year","getFullYear","useLocation","navigate","useNavigate","pathname","Parlays","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","Reservations","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.66a45df1.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      reservations {\n        _id\n        name\n        win_choice\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_RESERVATIONS = gql`\n  query getReservations {\n    reservations {\n      _id\n      name\n      win_choice\n      createdAt\n      trucks {\n        _id\n        truckModel\n        rentalPrice\n      }\n    }\n  }\n`;\n\nexport const QUERY_TRUCKS = gql`\n  query getTrucks {\n    trucks {\n      _id\n      truckModel\n      rentalPrice\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_RESERVATION = gql`\n  query getSingleReservation($reservationId: ID!) {\n    reservation(reservationId: $reservationId) {\n      _id\n      name\n      win_choice\n      createdAt\n      trucks {\n        _id\n        truckModel\n        rentalPrice\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      reservations {\n        _id\n        name\n        win_choice\n        createdAt\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_TRUCKS } from '../utils/queries';\n\n\nconst TruckList = () => {\n  const { loading, data } = useQuery(QUERY_TRUCKS);\n  const trucks = data?.trucks || [];\n  if (!trucks.length) {\n    return <h3></h3>;\n  }\nconsole.log(trucks);\n\n  return (\n      <div>\n      {loading ? ( \n        <div>Loading...💸...</div> \n      ) : (\n//************************* GAME-INFO: TEAMS & ODDS ******************//\n         <div className=\"flex-row my-4\" id=\"gaming\">\n          {trucks && trucks.map((truck) => (\n            <div key={truck._id} className=\"card mb-3\" id=\"game-card\">\n               <div className=\"p-3 text-light\" id=\"game-card\">\n                <div id=\"game-cardss\">\n                <p><img id=\"team\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667007982/away_m9lnn0.png\" alt=\"Away\"></img></p>\n                  <p className=\"card-body\">{truck.truckModel}</p>\n                  <p className=\"card-body\">Rental Price Total: ({truck.rentalPrice})</p>\n                </div>\n                  <p id=\"vs\"><img src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667008346/vs1_mwfonr.png\" alt=\"VS\"></img></p>\n                <div id=\"game-cards\"> \n                </div>\n              </div>\n              </div>\n          ))}\n          </div>\n      )}\n      </div>\n  );\n          };\nexport default TruckList;","import React from 'react';\n\nimport TruckList from '../components/TruckList';\n\nvar date = (new Date()).toString().split(' ').splice(1,3).join(' ');\ndocument.write(date);\n\nconst Home = () => {\n\n  return (\n    <main> \n      <div className=\"flex-row justify-center\">\n      <h5 id=\"list-title\">\n        Reservations: {date} <i class=\"fa-regular fa-calendar-check\"></i>\n      </h5>\n          <TruckList />\n        </div>\n    </main>\n  );\n};\n\nexport default Home;","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_RESERVATION = gql`\n  mutation addReservation($reservationId: ID!) {\n    addReservation(reservationId: $reservationId) {\n      _id\n      date\n      createdAt\n       truck {\n        _id\n        truckModel\n        rentalPrice\n      }\n    }\n  }\n`;\n\nexport const ADD_TRUCK = gql`\n  mutation addTruck ($reservationId: ID!, $truckModel: String!, $rentalPrice: Int!) {\n    addTruck(reservationId: $reservationId, truckModel: $truckModel, rentalPrice: $rentalPrice) {\n      trucks {\n        _id\n        truckModel\n        rentalPrice\n      }\n    }\n  }\n`;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center\">\n      <div className=\"col\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Sign Up <i class=\"fa-solid fa-user-plus\"></i></h4>\n          <div className=\"card-body\">\n            {data ? (\n              <button className='btn' id=\"btn1\">\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </button>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                 <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" />\n                 <script src=\"https://upload-widget.cloudinary.com/global/all.js\" type=\"text/javascript\"></script>\n  \n                {/* <input className='form-input'\n                    name=\"image\"\n                    type=\"url\"\n                    value={formState.image}\n                    onChange={handleChange}/>\n                <div id=\"inline_container\"></div> */}\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button id=\"btn1\"\n                  className=\"btn\"\n                  type=\"submit\"\n                >\n                  Submit <i class=\"fa-regular fa-paper-plane\"></i>\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\" id=\"log\">\n          <h4 id=\"login\" className=\"card-header\">Login <i class=\"fa-solid fa-circle-user\"></i></h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit <i class=\"fa-regular fa-paper-plane\"></i>\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div id=\"alert\" className=\"my-3 p-3 text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport TruckList from '../components/TruckList';\n\n\nimport { QUERY_SINGLE_RESERVATION } from '../utils/queries';\n\nconst SingleReservation = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const { reservationId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_RESERVATION, {\n    // pass URL parameter\n    variables: { reservationid: reservationId },\n  });\n\n  const reservation = data?.reservation || {};\n\n  if (loading) {\n    return <div>💸...💸</div>;\n  }\n  return (\n    <div className=\"my-3\" id=\"single-parlay\">\n      <h3 className=\"card-header bg-dark text-light\" id=\"single-header\">\n        {reservation.username} <br />\n          had this pick on {reservation.createdAt}\n      </h3>\n      <div className=\"bg-light py-4\">\n        <blockquote\n          className=\"p-4\" id=\"blockquote\"\n        >\n          {reservation.name}\n        </blockquote>\n      </div>\n\n      <div className=\"my-5\">\n        <TruckList trucks={reservation.trucks} />\n      </div>\n      {/* <div className=\"m-3 p-4\" style={{ border: '2px solid #1a1a1a' }}>\n        <GameForm parlayId={parlay._id} />\n      </div> */}\n    </div>\n  );\n};\n\nexport default SingleReservation;","import React from 'react';\nimport { Navigate, useParams, Link } from 'react-router-dom';\nimport {  useQuery } from '@apollo/client';\nimport { QUERY_RESERVATIONS, QUERY_ME, QUERY_USER } from '../utils/queries';\nimport Auth from '../utils/auth';\n// import ParlayForm from './ParlayForm';\n\nconst ReservationList = ({\n  reservations,\n  title,\n  Wins,\n  Losses,\n  showUsername = true,\n}) => {\n  const { username } = useParams();\nconst { loading, data } = useQuery(username ? QUERY_USER : QUERY_ME, QUERY_RESERVATIONS, {\n      variables: { username: username },\n    });\n  \n    const user = data?.me || data?.user || {};\n\n    if (Auth.loggedIn() && Auth.getProfile().data.username === username) {\n      return <Navigate to=\"/reservations\"/>;\n    }\n  \n    if (loading) {\n      return <div>Loading...💸...</div>;\n    }\n  \n    if (!user?.username) {\n      return (\n        <h4 id=\"title-list\">\n            Login in to play❗ <i id=\"error_icon\" class=\"fa-solid fa-circle-exclamation\"></i> Click on the links above to\n          Sign Up <i class=\"fa-solid fa-user-plus\"></i> or Log In <i class=\"fa-solid fa-circle-user\"></i> <i id=\"error_icon\" class=\"fa-solid fa-circle-exclamation\"></i>\n        </h4>\n      );\n    }\n\n  return (\n  \n    <div className='row' id=\"parlay-row\">\n       <h5 id=\"user-title\">\n        {`${user.username}'s Picks`}\n        <p id=\"totals\">TOTALS</p>\n        <p id=\"wins\">Winnings: {Wins=\"+$3,200.00\"}</p>\n        <p id=\"losses\">Losses: {Losses=\"-$1,650.00\"}</p>\n          <p>{title=\"Winner...Winner 💰...Chicken...Dinner 🐔\"}</p> \n      </h5>\n      <main className=\"flex-row justify-center\" id=\"action\">\n      {reservations &&\n        reservations.map((reservation) => (\n          <div key={reservation._id} className=\"card mb-3\" id=\"user-parlays\">\n            <h4 className=\"card-header\" id=\"single-header\">\n              {showUsername ? (\n               <p>\n                <Link\n                  className=\"text-light\" to={`/profiles/${reservation.username}`}>\n                 <span style={{ fontSize: '2rem' }}>\n                 {reservation.name}\n                 <p style={{fontSize: '1.5rem'}}> Date Reserved: [{reservation.date}]</p>\n                 <p  style={{ fontSize: '1.5rem' }}>Ticket Code: [{reservation.win_choice}]</p>\n                <br/> \n                 </span>\n                  <span style={{ fontSize: '1rem' }}>\n                    Created On: {reservation.createdAt}\n                  </span>\n                </Link>\n               </p> \n              ) : (\n                <>\n                  <span style={{ fontSize: '1rem' }}>\n                    Previous reserved date: {reservation.createdAt}\n                  </span>\n               \n                </>\n              )}\n            </h4>\n          </div>\n        ))}\n    </main>\n    </div>\n  );\n};\n\nexport default ReservationList;","import React, { FontAwesomeIcon, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_RESERVATIONS, QUERY_ME, QUERY_USER } from '../utils/queries';\n\nfunction ReservationForm() {\n  \n  const [name, setReservation] = useState('');\n  const [date, setDate] = useState('');\n  const [truckModel, setTruck] = useState(' ');\n  const [rentalPrice, setPrice] = useState(' ');\n  \n  const { username, user } = useParams();\n  const { loading, data } = useQuery(username ? QUERY_USER : QUERY_ME, QUERY_RESERVATIONS, {\n        variables: { username: username },\n      });\n  const reservation = data?.reservation || [];\n  const trucks = data?.trucks || [];\n \nconsole.log(reservation, trucks);\n\nif (loading) {\n    return <div>Loading...💸...</div>;\n  }\n    const handleSetReservation = event => {\n      setReservation(event.target.value)\n    };\n    const handleSetTruck = event => {\n      setTruck(event.target.value)\n    };\n    const handleSetDate = event => {\n      setDate(event.target.value)\n    };\n    const handleSetPrice = event => {\n      setPrice(event.target.value)\n    };\n  const handleSubmit = event => {\n    event.preventDefault();\n    alert(`Reservation request, successfully submitted ${<i id=\"success\" class=\"fa-solid fa-circle-check\"></i>}\n            Reservation: ${name} \\n\n            Truck: ${truckModel} \\n\n            Rental Price Total: ${rentalPrice} \\n\n            Current Reservation Date: ${date} \\n\n            `);\n  };\n  return (\n    <form onSubmit={handleSubmit} className=\"flex-row justify-center\" id=\"form\">\n      <div>\n        <label id=\"label\">Select Reservation:</label>\n        <input\n          type=\"checkbox\"\n          name=\"name\"\n          onChange={handleSetReservation}\n          value={[0,1,0,1]}\n        />\n        <label id=\"label\" for={name}>{name}</label>\n      </div>\n      <div>\n        <label id=\"label\">Select Desired Truck Make & Model:</label>\n        <input\n          type=\"checkbox\"\n          name=\"truckModel\"\n          onChange={handleSetTruck}\n          value={[truckModel]}\n        />\n        <label id=\"label\" for={date}>{date}</label>\n        <label id=\"label\"></label>\n        <input\n          type=\"checkbox\"\n          name=\"date\"\n          onChange={handleSetDate}\n          value={[date]}\n        />\n         <label id=\"label\" for={rentalPrice}>{rentalPrice}</label>\n        <input\n          type=\"checkbox\"\n          name=\"rentalPrice\"\n          onChange={handleSetPrice}\n          value={[rentalPrice]}\n        />\n      </div>\n      <button className='btn' type=\"submit\">\n            Request Reservation <FontAwesomeIcon icon=\"fa-solid fa-calendar-plus\" />\n      </button>\n    </form>\n  )\n}\nexport default ReservationForm;","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport ReservationList from '../components/ReservationList';\nimport ReservationForm from '../components/ReservationForm';\nimport { QUERY_RESERVATIONS } from '../utils/queries';\n\nconst Dashboard = () => {\n  const { loading, data } = useQuery(QUERY_RESERVATIONS);\n  const reservations = data?.reservations || [];\n  const user = data?.me || data?.user || {};\n \n    if (loading) {\n      return <div>Loading...💸...</div>;\n    }\n    \n  return (\n  <main>\n      <div className=\"flex-row justify-center\">\n      <div id=\"parlay-form\"\n            className=\"col-12 col-md-10 mb-3 p-3\"\n          >\n            <ReservationForm />\n          </div>\n      <div className=\"flex-row justify-center\">\n        {loading ? (\n          <div>Loading...💸...</div>\n          ) : (\n        <ReservationList \n        reservations={reservations}\n        title= {user.username +'s' + \" Reservations\"}\n        />\n        )}\n        </div>\n        </div>\n  </main>\n     \n\n  );\n};\n\nexport default Dashboard;\n","import React, {useEffect} from \"react\";\nimport { Link } from 'react-router-dom';\nimport Aos from \"aos\";\n\nimport Auth from '../utils/auth';\n\nconst Navbar = () => {\n  useEffect(() => {\n\t\tAos.init({duration:2000});\n\t\twindow.addEventListener(\"scroll\", () => {\n\t\t});\n\t}, [])\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n      <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <Link className=\"text-light\" to=\"/\">\n            <h1 id=\"title\"><img id=\"build\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1698109311/TRCUK_TITLE_debvdm.svg\" alt=\"Build A Bet\"></img></h1>\n          </Link>\n          <div className=\"row\" id=\"links\">\n          {Auth.loggedIn() ? (\n            <>\n            <Link className=\"btn\" to=\"/me\">\n                {Auth.getProfile().data.username}'s Dashboard\n            </Link>\n              <Link to=\"/reservations\">\n              <button className=\"btn\" to=\"/reservations\">\n              Reservations <i class=\"fa-regular fa-calendar-check\"></i>\n            </button>\n              </Link>\n            <button className=\"btn\" onClick={logout}>\n                Logout <i class=\"fa-solid fa-right-from-bracket\"></i>\n            </button>\n              {/* <div id=\"user-image\" className=\"card-img-top\"><img src={image.user} alt=\"profile\"></img></div> */}\n            </>\n          ) : (\n            <>\n            <Link className=\"btn\" to=\"/\">\n                Trucks  <i id=\"truck\" class=\"fa-solid fa-truck-fast\"></i>\n            </Link>\n          \n            <Link className=\"btn\" to=\"/login\">\n                Login <i class=\"fa-solid fa-circle-user\"></i>\n            </Link>\n            \n            <Link className=\"btn\" to=\"/signup\">\n                Sign Up <i class=\"fa-solid fa-user-plus\"></i>\n            </Link>\n            </>\n          )}\n          </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const year = new Date().getFullYear();\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer id=\"footer\" className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button id=\"back\" className=\"btn\"\n            onClick={() => navigate(-1)}\n          >\n            <i class=\"fa-solid fa-left-long\"></i> Go Back \n          </button>\n        )}\n        <h4 id=\"foot-title\">\n         \n          <div className=\"col-12 col-sm-12 col-md-8 mx-auto\">\n            <a\n\t\t\t\t\t\t\t\tclassName=\"px-3\"\n\t\t\t\t\t\t\t\thref=\"https://github.com/AASports89/u-truck\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t<img id=\"github\" src='https://res.cloudinary.com/dhqsixgmo/image/upload/v1666484175/public/images/github-icon_mvuylu.png' alt=\"github icon\"/>\n\t\t\t\t\t\t\t</a>\n              {' '}\n            </div>\n            <strong> AASports89 &copy; {year} </strong>\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","import React, { FontAwesomeIcon } from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_RESERVATIONS } from '../utils/queries';\n\nvar date = (new Date()).toString().split(' ').splice(1,3).join(' ');\ndocument.write(date);\n\nconst Parlays = () => {\n\n  const { loading, data } = useQuery(QUERY_RESERVATIONS);\n  const reservations = data?.reservations || [];\n  if (!reservations.length) {\n    return <h3></h3>;\n  }\nconsole.log(reservations);\n\n// const { username } = useParams();\n// const { loading, data } = useQuery(username ? QUERY_USER : QUERY_ME, QUERY_PARLAYS, {\n//       variables: { username: username },\n//     });\n  \n    // const user = data?.me || data?.user || {};\n    \n    // if (Auth.loggedIn() && Auth.getProfile().data.username === username) {\n    //   return <Navigate to=\"/parlays\"/>;\n    // }\n  \n    // if (loading) {\n    //   return <div>Loading...💸...</div>;\n    // }\n  \n    // if (!user?.username) {\n    //   return (\n    //     <h4>\n    //         Login in to play❗⛔ Click on the links above to\n    //       Sign Up 🎰  or Log In 📡 ❗⛔\n    //     </h4>\n    //   );\n    // }\n  \n    // return (\n      return (\n        <div>\n        {loading ? ( \n          <div>Loading...💸...</div> \n        ) : (\n      //************************* PARLAY-INFO: NAME & WIN_CHOICE ******************//\n      \n      <div className=\"flex-row justify-center\" id=\"parlaying\">\n        <div className=\"flex-row justify-center\">\n          <h5 id=\"par-title\">\n          Reservations for: {date} <FontAwesomeIcon id=\"cal_success\" icon=\"fa-solid fa-calendar-check\" />\n          </h5>\n          </div>\n        {reservations && reservations.map((reservation) => (\n        <div key={reservation._id} className=\"card mb-3\" id=\"game-cardss\">\n              <p className=\"card-body\">{reservation.name}</p>\n              <p className=\"card-body\"> Reservation Confirmation: [{reservation.win_choice}]</p>\n              {reservation.trucks && reservation.trucks.map((truck)=> (\n                <div key={truck._id}>\n                  <p>{truck.truckModel}</p>\n                  <p>{truck.rentalPrice}</p>\n                </div>\n              ))}\n            </div>\n      ))}\n      </div>\n  )};\n    </div>\n  );\n          };\n      {/* <div>\n        <div className=\"flex-row justify-center\" id=\"action-div\">\n          <h2 className=\"col-12 col-md-10 mb-3 p-3\" id=\"parlay-title\">\n            Welcome! {Auth.getProfile().data.username}: Dashboard 🎛️\n          </h2>\n  \n              <div className=\"col-12 col-md-10 mb-5\">\n                <ParlayList\n              parlays={user.parlays}\n              title={`${user.username}'s picks...`}\n              showTitle={false}\n              showUsername={false}\n            />\n          </div>\n          {!username && (\n            <div\n              className=\"col-12 col-md-10 mb-3 p-3\"\n              style={{ border: '1px dotted #1a1a1a' }}\n            >\n              <ParlayForm />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }; */}\n  \n  export default Parlays;\n  ","import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleReservation from './pages/SingleReservation';\nimport Dashboard from './pages/Dashboard';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\n// import TruckList from './components/TruckList';\nimport Reservations from './pages/Reservations';\nimport ReservationForm from './components/ReservationForm';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n      <header>\n      <Navbar />\n      </header>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <div className=\"container\">\n            <Routes>\n           \n              <Route \n                path=\"/\"\n                element={<Home />}\n              />\n               {/* <Route \n                path=\"/TruckList\" \n                element={<TruckList />}\n              /> */}\n              <Route \n                path=\"/ReservationForm\" \n                element={<ReservationForm />}\n              />\n              <Route \n                path=\"/reservations\" \n                element={<Reservations />}\n              />\n              <Route \n                path=\"/login\" \n                element={<Login />}\n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />}\n              />\n              <Route \n                path=\"/me\" \n                element={<Dashboard />}\n              />\n              <Route \n                path=\"/profiles/:username\" \n                element={<Dashboard />}\n              />\n              <Route \n                path=\"/reservations/:reservationId\" \n                element={<SingleReservation />}\n              />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}